plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    mixin { useLegacyMixinAp = true }
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    common(project(path: ":common", configuration: "transferBase")) { transitive false }
    common(project(path: ":common", configuration: "transferItem")) { transitive false }
    common(project(path: ":common", configuration: "transferFluid")) { transitive false }
    common(project(path: ":common", configuration: "transferEnergy")) { transitive false }
    implementation project(path: ":fabric", configuration: "namedElements")
    implementation(project(path: ":fabric", configuration: "transferBase")) { transitive false }
    implementation(project(path: ":fabric", configuration: "transferItem")) { transitive false }
    implementation(project(path: ":fabric", configuration: "transferFluid")) { transitive false }
    implementation(project(path: ":fabric", configuration: "transferEnergy")) { transitive false }
    common(project(path: ":testmod-common", configuration: "namedElements")) { transitive false }
}
